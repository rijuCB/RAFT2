// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/rijuCB/RAFT2/restServer (interfaces: IRestServer)

// Package mock_restServer is a generated GoMock package.
package mock_restServer

import (
	http "net/http"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIRestServer is a mock of IRestServer interface.
type MockIRestServer struct {
	ctrl     *gomock.Controller
	recorder *MockIRestServerMockRecorder
}

// MockIRestServerMockRecorder is the mock recorder for MockIRestServer.
type MockIRestServerMockRecorder struct {
	mock *MockIRestServer
}

// NewMockIRestServer creates a new mock instance.
func NewMockIRestServer(ctrl *gomock.Controller) *MockIRestServer {
	mock := &MockIRestServer{ctrl: ctrl}
	mock.recorder = &MockIRestServerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIRestServer) EXPECT() *MockIRestServerMockRecorder {
	return m.recorder
}

// AppendLogs mocks base method.
func (m *MockIRestServer) AppendLogs(arg0 http.ResponseWriter, arg1 *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "AppendLogs", arg0, arg1)
}

// AppendLogs indicates an expected call of AppendLogs.
func (mr *MockIRestServerMockRecorder) AppendLogs(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AppendLogs", reflect.TypeOf((*MockIRestServer)(nil).AppendLogs), arg0, arg1)
}

// FindAndServePort mocks base method.
func (m *MockIRestServer) FindAndServePort() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "FindAndServePort")
}

// FindAndServePort indicates an expected call of FindAndServePort.
func (mr *MockIRestServerMockRecorder) FindAndServePort() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindAndServePort", reflect.TypeOf((*MockIRestServer)(nil).FindAndServePort))
}

// RequestVote mocks base method.
func (m *MockIRestServer) RequestVote(arg0 http.ResponseWriter, arg1 *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "RequestVote", arg0, arg1)
}

// RequestVote indicates an expected call of RequestVote.
func (mr *MockIRestServerMockRecorder) RequestVote(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RequestVote", reflect.TypeOf((*MockIRestServer)(nil).RequestVote), arg0, arg1)
}
